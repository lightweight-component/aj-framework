{"version":3,"file":"../dist/workflow.min.js","sources":["workflow.min.js"],"sourcesContent":["\"use strict\";\n/* ----------------------------------------工具函数---------------------------------- */\n//使的 SVG 图形可以添加样式类\nRaphael.el.addClass = function (className) {\n    this.node.setAttribute(\"class\", className);\n    return this;\n};\nvar aj;\n(function (aj) {\n    var svg;\n    (function (svg) {\n        var Utils = /** @class */ (function () {\n            function Utils() {\n            }\n            /**\n             * 计算矩形中心到 p 的连线与矩形的交叉点\n             */\n            Utils.connPoint = function (rect, p) {\n                var start = p, end = { x: rect.x + rect.width / 2, y: rect.y + rect.height / 2 };\n                // 计算正切角度\n                var tag = (end.y - start.y) / (end.x - start.x);\n                tag = isNaN(tag) ? 0 : tag;\n                var rectTag = rect.height / rect.width;\n                // 计算箭头位置\n                var xFlag = start.y < end.y ? -1 : 1, yFlag = start.x < end.x ? -1 : 1, arrowTop, arrowLeft;\n                // 按角度判断箭头位置\n                if (Math.abs(tag) > rectTag && xFlag == -1) { // top 边\n                    arrowTop = end.y - rect.height / 2;\n                    arrowLeft = end.x + xFlag * rect.height / 2 / tag;\n                }\n                else if (Math.abs(tag) > rectTag && xFlag == 1) { // bottom 边\n                    arrowTop = end.y + rect.height / 2;\n                    arrowLeft = end.x + xFlag * rect.height / 2 / tag;\n                }\n                else if (Math.abs(tag) < rectTag && yFlag == -1) { // left 边\n                    arrowTop = end.y + yFlag * rect.width / 2 * tag;\n                    arrowLeft = end.x - rect.width / 2;\n                }\n                else if (Math.abs(tag) < rectTag && yFlag == 1) { // right 边\n                    arrowTop = end.y + rect.width / 2 * tag;\n                    arrowLeft = end.x + rect.width / 2;\n                }\n                return { x: arrowLeft, y: arrowTop };\n            };\n            /**\n             * 求两个点的中间点\n             *\n             * @param p1\n             * @param p2\n             */\n            Utils.center = function (p1, p2) {\n                return { x: (p1.x - p2.x) / 2 + p2.x, y: (p1.y - p2.y) / 2 + p2.y };\n            };\n            /**\n             * 三个点是否在一条直线上\n             *\n             * @param p1\n             * @param p2\n             * @param p3\n             */\n            Utils.isLine = function (p1, p2, p3) {\n                var s, p2y;\n                if ((p1.x - p3.x) == 0)\n                    s = 1;\n                else\n                    s = (p1.y - p3.y) / (p1.x - p3.x);\n                p2y = (p2.x - p3.x) * s + p3.y;\n                // $('body').append(p2.y+'-'+p2y+'='+(p2.y-p2y)+', ');\n                if ((p2.y - p2y) < 10 && (p2.y - p2y) > -10) {\n                    p2.y = p2y;\n                    return true;\n                }\n                return false;\n            };\n            /**\n             * 画箭头\n             *\n             * @param p1 开始位置\n             * @param p2 结束位置\n             * @param r  前头的边长\n             */\n            Utils.arrow = function (p1, p2, r) {\n                var atan = Math.atan2(p1.y - p2.y, p2.x - p1.x) * (180 / Math.PI);\n                var centerX = p2.x - r * Math.cos(atan * (Math.PI / 180));\n                var centerY = p2.y + r * Math.sin(atan * (Math.PI / 180));\n                var x2 = centerX + r * Math.cos((atan + 120) * (Math.PI / 180));\n                var y2 = centerY - r * Math.sin((atan + 120) * (Math.PI / 180));\n                var x3 = centerX + r * Math.cos((atan + 240) * (Math.PI / 180));\n                var y3 = centerY - r * Math.sin((atan + 240) * (Math.PI / 180));\n                return [p2, { x: x2, y: y2 }, { x: x3, y: y3 }];\n            };\n            return Utils;\n        }());\n        svg.Utils = Utils;\n        function foo() { }\n        // 创建文本节点，返回 vue 实例\n        aj.svg.createTextNode = function (_text, x, y) {\n            var text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            text.textContent = '{{value}}';\n            text.setAttributeNS(null, \"x\", x);\n            text.setAttributeNS(null, \"y\", y);\n            aj('svg').appendChild(text);\n            return new Vue({\n                el: text,\n                data: typeof _text == 'string' ? { value: _text } : _text,\n                methods: {\n                    // 设置文字坐标\n                    setXY: function (x, y) {\n                        this.$el.setAttributeNS(null, \"x\", x);\n                        this.$el.setAttributeNS(null, \"y\", y);\n                    },\n                    getXY: function () {\n                        return { x: Number(this.$el.getAttribute('x')), y: Number(this.$el.getAttribute('y')) };\n                    },\n                    // 在一个 box 中居中定位文字\n                    setXY_vBox: function (vBox) {\n                        var w = vBox.x + vBox.width / 2, h = vBox.y + vBox.height / 2;\n                        var textBox = this.$el.getBoundingClientRect();\n                        this.setXY(w - textBox.width / 2, h + 5);\n                    }\n                }\n            });\n        };\n        aj.svg.serialize = {\n            /**\n             * 生成键对值\n             *\n             * @param strArr\n             * @param key\n             * @param value\n             */\n            keyValue: function (strArr, key, value) {\n                if (value) {\n                    value = value.replace(/>/g, \"#5\").replace(/</g, \"#6\").replace(/&/g, \"#7\");\n                    strArr.push(\" \" + key + '=\"' + value + '\"');\n                }\n            },\n            rect: {\n                toJson: function (_o, _text, _rect) {\n                    var data = \"{type:'\" + _o.type + \"',text:{text:'\" + _text.attr('text') +\n                        \"'}, attr:{ x:\" + Math.round(_rect.attr('x')) + \", y:\" + Math.round(_rect.attr('y')) +\n                        \", width:\" + Math.round(_rect.attr('width')) + \", height:\" + Math.round(_rect.attr('height')) + \"}, props:{\";\n                    for (var k in _o.props)\n                        data += k + \":{value:'\" + _o.props[k].value + \"'},\";\n                    if (data.substring(data.length - 1, data.length) == ',')\n                        data = data.substring(0, data.length - 1);\n                    data += \"}}\";\n                    return data;\n                },\n                toBeforeXml: function (comp) {\n                    var str = [\" <\", comp.type, ' layout=\"' +\n                            (Math.round(comp.svg.attr(\"x\")) - 180), \",\", Math.round(comp.svg.attr(\"y\")), \",\",\n                        Math.round(comp.svg.attr(\"width\")), \",\", Math.round(comp.svg.attr(\"height\")), '\"'];\n                    var value, keyValue = aj.svg.serialize.keyValue;\n                    for (var i in comp.wfData) {\n                        value = comp.wfData[i].value;\n                        if (i == \"name\" && !value) {\n                            aj.alert(comp.type + \" 名称 不能为空\");\n                            return \"\";\n                        }\n                        if (i === \"layout\")\n                            continue;\n                        keyValue(str, i, value);\n                    }\n                    str.push(\">\");\n                    return str.join('');\n                }\n            },\n            path: {\n                toJson: function (_from, _to, _dotList, _text, _textPos) {\n                    var r = \"{from:'\" + _from.getId() + \"',to:'\" + _to.getId() + \"', dots:\" + _dotList.toJson() + \",text:{text:'\" + _text.attr(\"text\") +\n                        \"'},textPos:{_dotList:\" + Math.round(_textPos.x) + \",_ox:\" + Math.round(_textPos.y) + \"}, props:{\";\n                    for (var o in _o.props)\n                        r += o + \":{value:'\" + _o.props[o].value + \"'},\";\n                    if (r.substring(r.length - 1, r.length) == \",\")\n                        r = r.substring(0, r.length - 1);\n                    r += \"}}\";\n                    return r;\n                },\n                toXml: function (path, _textPos) {\n                    //\tvar str = ['<transition offset=\"', Math.round(_textPos.x) + \",\" + Math.round(_textPos.y), '\" to=\"', path.to().getName(), '\" '];\n                    var str = ['<transition offset=\"\" to=\"', path.to().vue.id, '\" '];\n                    var dots = aj.svg.serialize.dotList.toXml(path.fromDot);\n                    if (dots != \"\")\n                        str.push(' g=\"' + dots + '\" ');\n                    var value, keyValue = aj.svg.serialize.keyValue;\n                    for (var i in path.wfData) {\n                        value = path.wfData[i].value;\n                        if (i === \"name\" && value == \"\") { // name 为空，使用 id 作为 name\n                            str.push(i + '=\"' + _id + '\" ');\n                            continue;\n                        }\n                        keyValue(str, i, value);\n                    }\n                    str.push(\"/>\");\n                    return str.join('');\n                }\n            },\n            dotList: {\n                toJson: function (_fromDot) {\n                    var data = \"[\", d = _fromDot;\n                    while (d) {\n                        if (d.type === aj.svg.Dot.BIG)\n                            data += \"{x:\" + Math.round(d.pos().x) + \",y:\" + Math.round(d.pos().y) + \"},\";\n                        d = d.right();\n                    }\n                    if (data.substring(data.length - 1, data.length) == \",\")\n                        data = data.substring(0, data.length - 1);\n                    data += \"]\";\n                    return data;\n                },\n                toXml: function (_fromDot) {\n                    var data = \"\", d = _fromDot;\n                    while (d) {\n                        if (d.type === aj.svg.Dot.BIG)\n                            data += (Math.round(d.pos().x) - 180) + \",\" + Math.round(d.pos().y) + \";\";\n                        d = d.right();\n                    }\n                    if (data.substring(data.length - 1, data.length) == \";\")\n                        data = data.substring(0, data.length - 1);\n                    return data;\n                }\n            }\n        };\n    })(svg = aj.svg || (aj.svg = {}));\n})(aj || (aj = {}));\n\n\"use strict\";\nvar aj;\n(function (aj) {\n    var svg;\n    (function (svg) {\n        /**\n         * 基础图形组件\n         */\n        var BaseComponent = /** @class */ (function () {\n            function BaseComponent() {\n                this.id = \"\";\n            }\n            return BaseComponent;\n        }());\n        svg.BaseComponent = BaseComponent;\n    })(svg = aj.svg || (aj.svg = {}));\n})(aj || (aj = {}));\n\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar aj;\n(function (aj) {\n    var svg;\n    (function (svg_1) {\n        var diff = 3;\n        /**\n         * 表示一个点。点只有坐标，没有大小。\n         */\n        var Dot = /** @class */ (function (_super) {\n            __extends(Dot, _super);\n            /**\n             * 创建一个新的点\n             *\n             * @param type      点类型\n             * @param _pos      点的坐标\n             * @param _lt       左边的点\n             * @param _rt       右边的点\n             * @param path      点所在的路径对象\n             */\n            function Dot(type, _pos, _lt, _rt, path) {\n                var _this = _super.call(this) || this;\n                var svg = PAPER.rect(_pos.x - diff, _pos.y - diff); // 形状实例\n                svg.addClass('dot');\n                _this.svg = svg;\n                _this.type = type;\n                _this._leftDot = _lt;\n                _this._rightDot = _rt;\n                _this._pos = _pos;\n                _this.path = path;\n                if (type == Dot.BIG || type == Dot.SMALL) {\n                    var _ox, _oy; // 缓存移动前的位置\n                    svg.drag(function (dx, dy) { return _this.moveTo(_ox + dx, _oy + dy); }, function () { _ox = svg.attr(\"x\") + diff, _oy = svg.attr(\"y\") + diff; }); // 开始拖动\n                }\n                return _this;\n            }\n            /**\n             * 获取左边的节点，或者设置左边的点\n             *\n             * @param dot 新的点\n             */\n            Dot.prototype.left = function (dot) {\n                if (dot)\n                    this._leftDot = dot;\n                return this._leftDot;\n            };\n            /**\n             * 获取右边的节点，或者设置右边的点\n             *\n             * @param dot 新的点\n             */\n            Dot.prototype.right = function (dot) {\n                if (dot)\n                    this._rightDot = dot;\n                return this._rightDot;\n            };\n            Dot.prototype.remove = function () {\n                this._leftDot = this._rightDot = null;\n                this.svg.remove();\n            };\n            /**\n             * 定位这个点，或者获取该点的坐标。如果有新的定位送入，则采用新的定位。\n             * 这个方法仅仅是改变点的坐标，要同步修改相关联的点，请使用 moveTo() 方法。\n             *\n             * @param p 新的定位坐标，这是可选的\n             * @returns 这个点的坐标\n             */\n            Dot.prototype.pos = function (p) {\n                if (p && !isNaN(p.x) && !isNaN(p.y)) {\n                    this._pos = p;\n                    this.svg.attr({ x: p.x - diff, y: p.y - diff });\n                }\n                return this._pos;\n            };\n            /**\n             * 移动到某个点，并同步相关的点。\n             *\n             * @param x X 坐标\n             * @param y y 坐标\n             */\n            Dot.prototype.moveTo = function (x, y) {\n                var _pos = this.pos({ x: x, y: y });\n                var path = this.path;\n                var _lt = this.left(), _rt = this.right();\n                var right2x = _rt && _rt.right(), left2x = _lt && _lt.left();\n                switch (this.type) {\n                    case Dot.FROM:\n                        if (right2x && right2x.type == Dot.TO)\n                            right2x.pos(svg_1.Utils.connPoint(path.to().getBBox(), _pos));\n                        if (_rt && right2x)\n                            _rt.pos(svg_1.Utils.center(_pos, right2x.pos()));\n                        break;\n                    case Dot.BIG:\n                        if (right2x && right2x.type == Dot.TO)\n                            right2x.pos(svg_1.Utils.connPoint(path.to().getBBox(), _pos));\n                        if (left2x && left2x.type == Dot.FROM)\n                            left2x.pos(svg_1.Utils.connPoint(path.from().getBBox(), _pos));\n                        if (right2x)\n                            _rt === null || _rt === void 0 ? void 0 : _rt.pos(svg_1.Utils.center(_pos, right2x.pos()));\n                        if (left2x)\n                            _lt === null || _lt === void 0 ? void 0 : _lt.pos(svg_1.Utils.center(_pos, left2x.pos()));\n                        // 三个大点在一条线上，移除中间的小点\n                        if (svg_1.Utils.isLine(left2x === null || left2x === void 0 ? void 0 : left2x.pos(), _pos, right2x === null || right2x === void 0 ? void 0 : right2x.pos())) {\n                            this.type = Dot.SMALL;\n                            this.svg.attr({ width: 5, height: 5, stroke: \"#fff\", fill: \"#000\", cursor: \"move\", \"stroke-width\": 3 });\n                            var P = _lt;\n                            left2x.right(_lt.right());\n                            this._leftDot = _lt = left2x;\n                            P === null || P === void 0 ? void 0 : P.remove();\n                            var R = _rt;\n                            right2x.left(_rt.left());\n                            this._rightDot = _rt = right2x;\n                            R.remove();\n                        }\n                        break;\n                    case Dot.SMALL: // 移动小点时，转变为大点，增加俩个小点\n                        if (_lt && _rt && !svg_1.Utils.isLine(_lt.pos(), _pos, _rt.pos())) {\n                            this.type = Dot.BIG; // 变为 BIG 类型之后，只执行一次了\n                            this.svg.attr({ width: 5, height: 5, stroke: \"#fff\", fill: \"#000\", cursor: \"move\", \"stroke-width\": 2 });\n                            var P_1 = new Dot(Dot.SMALL, svg_1.Utils.center(_lt.pos(), _pos), _lt, _lt.right(), path);\n                            _lt.right(P_1);\n                            this._leftDot = _lt = P_1;\n                            var R_1 = new Dot(Dot.SMALL, svg_1.Utils.center(_rt.pos(), _pos), _rt.left(), _rt, path);\n                            _rt.left(R_1);\n                            this._rightDot = _rt = R_1;\n                        }\n                        break;\n                    case Dot.TO:\n                        if (left2x && left2x.type == Dot.FROM)\n                            left2x.pos(svg_1.Utils.connPoint(path.from().getBBox(), _pos));\n                        if (left2x)\n                            _lt.pos(svg_1.Utils.center(_pos, left2x.pos()));\n                        break;\n                }\n                path.refreshPath(); // 线的路径, 转换为 path 格式的字串\n            };\n            Dot.prototype.toJson = function () { return \"\"; };\n            Dot.prototype.show = function () { };\n            Dot.prototype.hide = function () { };\n            return Dot;\n        }(svg_1.BaseComponent));\n        svg_1.Dot = Dot;\n        Dot.TO = 1;\n        Dot.FROM = 2;\n        Dot.SMALL = 3;\n        Dot.BIG = 4;\n    })(svg = aj.svg || (aj.svg = {}));\n})(aj || (aj = {}));\n"],"names":["Raphael","el","addClass","className","this","node","setAttribute","aj","svg","Utils","connPoint","rect","p","arrowTop","arrowLeft","start","end","x","width","y","height","tag","isNaN","rectTag","xFlag","yFlag","Math","abs","center","p1","p2","isLine","p3","s","p2y","arrow","r","atan","atan2","PI","centerX","cos","centerY","sin","createTextNode","_text","text","document","createElementNS","textContent","setAttributeNS","appendChild","Vue","data","value","methods","setXY","$el","getXY","Number","getAttribute","setXY_vBox","vBox","w","h","textBox","getBoundingClientRect","serialize","keyValue","strArr","key","replace","push","toJson","_o","_rect","k","type","attr","round","props","substring","length","toBeforeXml","comp","i","str","wfData","alert","join","path","_from","_to","_dotList","_textPos","o","getId","toXml","to","vue","id","dots","dotList","fromDot","_id","_fromDot","d","Dot","BIG","pos","right","BaseComponent","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","prototype","hasOwnProperty","call","__","constructor","create","svg_1","_super","diff","_pos","_lt","_rt","_ox","_oy","_this","PAPER","_leftDot","_rightDot","SMALL","drag","dx","dy","moveTo","left","dot","remove","R_1","right2x","left2x","FROM","TO","getBBox","from","stroke","fill","cursor","stroke-width","P","R","P_1","refreshPath","show","hide"],"mappings":"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"}