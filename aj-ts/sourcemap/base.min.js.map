{"version":3,"file":"../dist/base.min.js","sources":["base.min.js"],"sourcesContent":["\"use strict\";\nElement.prototype.$ = function (cssSelector, fn) {\n    if (typeof fn == 'function') {\n        var children = this.querySelectorAll(cssSelector);\n        if (children && fn)\n            // @ts-ignore\n            Array.prototype.forEach.call(children, fn);\n        return children;\n    }\n    else\n        // @ts-ignore\n        return this.querySelector.apply(this, arguments);\n};\nElement.prototype.up = function (tagName, className) {\n    if (tagName && className)\n        throw '只能任选一种参数，不能同时传';\n    var el = this.parentNode;\n    tagName = tagName && tagName.toUpperCase();\n    while (el) {\n        if (tagName && el.tagName == tagName)\n            return el;\n        if (className && el.className && ~el.className.indexOf(className))\n            return el;\n        el = el.parentNode;\n    }\n    return null;\n};\nFunction.prototype.delegate = function () {\n    var _args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        _args[_i] = arguments[_i];\n    }\n    var self = this, scope = this.scope, args = arguments, aLength = arguments.length, fnToken = 'function';\n    return function () {\n        var bLength = arguments.length, Length = (aLength > bLength) ? aLength : bLength;\n        // mission one:\n        for (var i = 0; i < Length; i++)\n            if (arguments[i])\n                args[i] = arguments[i]; // 拷贝参数\n        args.length = Length; // 在 MS JScript 下面，arguments 作为数字来使用还是有问题，就是 length 不能自动更新。修正如左:\n        // mission two:\n        for (var i = 0, j = args.length; i < j; i++) {\n            var _arg = args[i];\n            if (_arg && typeof _arg == fnToken && _arg.late == true)\n                args[i] = _arg.apply(scope || this, args);\n        }\n        return self.apply(scope || this, args);\n    };\n};\n/**\n * 日期格式化\n *\n * @author meizz\n */\nDate.prototype.format = function (fmt) {\n    var o = {\n        \"M+\": this.getMonth() + 1,\n        \"d+\": this.getDate(),\n        \"h+\": this.getHours(),\n        \"m+\": this.getMinutes(),\n        \"s+\": this.getSeconds(),\n        \"q+\": Math.floor((this.getMonth() + 3) / 3),\n        \"S\": this.getMilliseconds() // 毫秒   \n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n            var obj = (RegExp.$1.length == 1) ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length);\n            // @ts-ignore\n            fmt = fmt.replace(RegExp.$1, obj);\n        }\n    return fmt;\n};\n/*\n    polyfill JavaScript-Canvas-to-Blob 解决了 HTMLCanvasElement.toBlob 的兼容性\n    https://github.com/blueimp/JavaScript-Canvas-to-Blob\n*/\nif (!HTMLCanvasElement.prototype.toBlob) {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function (callback, type, quality) {\n            var binStr = atob(this.toDataURL(type, quality).split(',')[1]), len = binStr.length, arr = new Uint8Array(len);\n            for (var i = 0; i < len; i++)\n                arr[i] = binStr.charCodeAt(i);\n            callback(new Blob([arr], { type: type || 'image/png' }));\n        }\n    });\n}\n\n\"use strict\";\nvar aj;\n(function (aj) {\n    /**\n     * 复制 b 对象到 a 对象身上\n     *\n     * @param {Object} 目标对象\n     * @param {Object} 源对象\n     */\n    function apply(a, b, c) {\n        for (var i in b)\n            a[i] = b[i];\n        return c ? aj.apply(a, c) : a;\n    }\n    aj.apply = apply;\n    /**\n     * 加载脚本\n     *\n     * @param url   脚本地址\n     * @param id    脚本元素 id\n     * @param cb    回调函数\n     */\n    function loadScript(url, id, cb) {\n        var script = document.createElement(\"script\");\n        script.src = url;\n        if (cb)\n            script.onload = cb;\n        if (id)\n            script.id = id;\n        document.getElementsByTagName(\"head\")[0].appendChild(script);\n    }\n    aj.loadScript = loadScript;\n    /**\n      * 并行和串行任务\n      *\n      * @author https://segmentfault.com/a/1190000013265925\n      * @param arr\n      * @param finnaly\n      */\n    function parallel(arr, _finally) {\n        var fn, index = 0;\n        // @ts-ignore\n        var statusArr = Array(arr.length).fill().map(function () { return ({\n            isActive: false,\n            data: null\n        }); });\n        var isFinished = function () {\n            return statusArr.every(function (item) { return item.isActive === true; });\n        };\n        var resolve = function (index) {\n            return function (data) {\n                statusArr[index].data = data;\n                statusArr[index].isActive = true;\n                var isFinish = isFinished();\n                if (isFinish) {\n                    var datas = statusArr.map(function (item) { return item.data; });\n                    _finally(datas);\n                }\n            };\n        };\n        // @ts-ignore\n        while ((fn = arr.shift())) {\n            fn(resolve(index)); // 给 resolve 函数追加参数,可以使用 bind 函数实现,这里使用了柯里化\n            index++;\n        }\n    }\n    aj.parallel = parallel;\n    /**\n     * 函数节流\n     *\n     * @author https://www.cnblogs.com/moqiutao/p/6875955.html\n     * @param fn\n     * @param delay\n     * @param mustRunDelay\n     */\n    function throttle(fn, delay, mustRunDelay) {\n        var timer, t_start;\n        return function () {\n            var _this = this;\n            var t_curr = +new Date();\n            window.clearTimeout(timer);\n            if (!t_start)\n                t_start = t_curr;\n            if (t_curr - t_start >= mustRunDelay) {\n                // @ts-ignore\n                fn.apply(this, arguments);\n                t_start = t_curr;\n            }\n            else {\n                var args = arguments;\n                // @ts-ignore\n                timer = window.setTimeout(function () { return fn.apply(_this, args); }, delay);\n            }\n        };\n    }\n    aj.throttle = throttle;\n    ;\n    aj.SELECTED = \"selected\";\n    aj.SELECTED_CSS = \".\" + aj.SELECTED;\n    /**\n     * 判断是否 Vue 配置字段\n     *\n     * @param name\n     */\n    function isVueCfg(name) {\n        return name == 'template' || name == 'data' || name == 'mixins' || name == 'computed' || name == 'mounted' || name == \"watch\";\n    }\n    /**\n     *\n     * @param name\n     * @param props\n     */\n    function isPropsField(name, props) {\n        if (props && props[name])\n            return true;\n        else\n            return false;\n    }\n    /**\n     * 判断是否 props 字段\n     *\n     * @param value\n     */\n    function isSimplePropsField(value) {\n        // console.log(value)\n        if (value === String || value === Boolean || value === Number || value && value.type)\n            return true;\n        else\n            return false;\n    }\n    /**\n     * 为让 Vue 组件使用 Class 风格，通过一个类似语法糖的转换器\n     * 这是实验性质的\n     */\n    var VueComponent = /** @class */ (function () {\n        function VueComponent() {\n            this.$el = document.body;\n            this.props = {};\n        }\n        VueComponent.prototype.$destroy = function () { };\n        VueComponent.prototype.$emit = function (e) {\n            var obj = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                obj[_i - 1] = arguments[_i];\n            }\n        };\n        /**\n         * 转换为 ClassAPI\n         */\n        VueComponent.prototype.register = function (instanceFields) {\n            var cfg = {\n                props: {},\n                methods: {}\n            };\n            var dataFields = {};\n            for (var i in this) {\n                if (i == 'constructor' || i == 'name' || i == 'register' || i == '$destroy' || i == \"$el\" || i == \"$emit\" || i == \"$options\")\n                    continue;\n                var value = this[i];\n                if (isVueCfg(i))\n                    cfg[i] = value;\n                else if (isSimplePropsField(value))\n                    cfg.props[i] = value;\n                else if (typeof value == 'function')\n                    cfg.methods[i] = value;\n                else if (isPropsField(i, this.props))\n                    cfg.props[i] = this.props[i];\n                else // data fiels\n                    dataFields[i] = value;\n            }\n            // 注意如果 类有了 data(){}，那么 data 属性将会失效（仅作提示用），改读取 data() {} 的\n            if (!cfg.data)\n                cfg.data = function () {\n                    return dataFields;\n                };\n            // console.log(cfg)\n            Vue.component(this.name, cfg);\n        };\n        return VueComponent;\n    }());\n    aj.VueComponent = VueComponent;\n})(aj || (aj = {}));\n// VS Code 高亮 HTML 用\nvar html = String;\n\n\"use strict\";\n/*\n* --------------------------------------------------------\n* 封装 XHR，支持\n* GET/POST/PUT/DELETE/FormData\n* --------------------------------------------------------\n*/\nvar aj;\n(function (aj) {\n    var xhr;\n    (function (xhr_1) {\n        /**\n         * 执行请求，这是内部的函数\n         *\n         * @param url       注意 url 部分带有 # 的话则不能传参数过来\n         * @param cb        回调函数\n         * @param args      请求参数\n         * @param method    请求 HTTP 方法\n         * @param cfg       配置\n         */\n        function request(url, cb, args, method, cfg) {\n            if (method === void 0) { method = \"GET\"; }\n            var params = args ? json2url(args) : \"\";\n            var xhr = new XMLHttpRequest();\n            method = method.toUpperCase();\n            if (method == 'POST' || method == 'PUT')\n                xhr.open(method, url);\n            else\n                xhr.open(method, url + (params ? '?' + params : ''));\n            cb.url = url; // 保存 url 以便记录请求路径，可用于调试\n            // @ts-ignore\n            xhr.onreadystatechange = requestHandler.delegate(null, cb, cfg && cfg.parseContentType);\n            xhr.setRequestHeader('Accept', 'application/json');\n            if (method == 'POST' || method == 'PUT') {\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.send(params);\n            }\n            else\n                xhr.send(null);\n        }\n        xhr_1.request = request;\n        /**\n         * JSON 转换为 URL。\n         * 注意这个方法不会作任何编码处理。\n         *\n         * @param json      JSON\n         * @param appendUrl 附加的地址\n         * @returns 如 a=1&b=true&c=foo 的参数字符串\n         */\n        function json2url(json, appendUrl) {\n            var params = new Array();\n            for (var i in json)\n                params.push(i + '=' + json[i]);\n            var _params = params.join('&');\n            if (appendUrl) // 如果有 ? 则追加，否则加入 ?\n                _params = ~appendUrl.indexOf('?') ? appendUrl + '&' + params : appendUrl + '?' + params;\n            return _params;\n        }\n        xhr_1.json2url = json2url;\n        /**\n         * XHR 前期执行的回调函数，进行一些初始化的工作\n         *\n         * @param this\n         * @param ev                XHR 事件，不使用\n         * @param cb                回调函数\n         * @param parseContentType  解析响应数据的类型\n         */\n        function requestHandler(ev, cb, parseContentType) {\n            if (this.readyState === 4 && this.status === 200) {\n                var responseText = this.responseText.trim();\n                var data = null;\n                try {\n                    if (!responseText)\n                        throw '服务端返回空的字符串!';\n                    switch (parseContentType) {\n                        case 'text':\n                            data = responseText;\n                            break;\n                        case 'xml':\n                            data = this.responseXML;\n                            break;\n                        case 'json':\n                        default:\n                            try {\n                                data = JSON.parse(responseText);\n                            }\n                            catch (e) {\n                                try {\n                                    data = eval(\"window.TEMP_VAR = \" + responseText); // for {ok: true}\n                                }\n                                catch (e) {\n                                    throw e;\n                                }\n                            }\n                    }\n                }\n                catch (e) {\n                    window.alert(\"XHR \\u9519\\u8BEF:\" + e + \"\\n\\u8BBF\\u95EE\\u5730\\u5740\\u662F: \" + cb.url); // 提示用户异常\n                }\n                cb(data, this);\n            }\n            if (this.readyState === 4 && this.status == 500)\n                window.alert('服务端 500 错误！');\n        }\n        xhr_1.requestHandler = requestHandler;\n        xhr_1.get = function (url, cb, args, cfg) { return request(url, cb, args, 'GET', cfg); };\n        xhr_1.post = function (url, cb, args, cfg) { return request(url, cb, args, 'POST', cfg); };\n        xhr_1.put = function (url, cb, args, cfg) { return request(url, cb, args, 'PUT', cfg); };\n        xhr_1.dele = function (url, cb, args, cfg) { return request(url, cb, args, 'DELETE', cfg); };\n        /**\n         *  默认的回调，有专属的字段并呼叫专属的控件\n         *\n         * @param j         响应结果 JSON\n         * @param xhr       XHR 请求对象\n         * @param onOK      当 isOk = true 时执行的回调函数\n         * @param onFail    当 isOk = false 时执行的回调函数\n         */\n        xhr_1.defaultCallBack = function (j, xhr, onOK, onFail) {\n            if (j) {\n                if (j.isOk) {\n                    onOK && onOK(j);\n                    aj.msg.show(j.msg || '操作成功！');\n                }\n                else {\n                    onFail && onFail(j);\n                    aj.msg(j.msg || '执行失败！原因未知！');\n                }\n            }\n            else {\n                onFail && onFail(j);\n                aj.msg.show('服务端执行错误，不是标准的消息体 ServerSide Error! ');\n            }\n        };\n        /**\n         * 初始化 AJAX 表单\n         *\n         * @param form  表单元素，可以是 CSS 选择符，或者是 HTML 元素\n         * @param cb    回调函数，可选的\n         * @param cfg   表单请求的配置参数，可选的\n         */\n        function form(form, cb, cfg) {\n            if (cb === void 0) { cb = xhr_1.defaultCallBack; }\n            if (cfg === void 0) { cfg = {}; }\n            if (!form)\n                return;\n            if (typeof form == 'string')\n                form = document.body.$(form);\n            if (!form.action)\n                throw '请在 form 表单中指定 action 属性。Please fill the url in ACTION attribute.';\n            if (!cfg.noFormValid)\n                new aj.form.Validator(form);\n            if (cfg.googleReCAPTCHA && !document.body.$(\"#googleReCAPTCHA\")) // 加载脚本\n                aj.loadScript(\"https://www.recaptcha.net/recaptcha/api.js?render=\" + cfg.googleReCAPTCHA, 'googleReCAPTCHA');\n            // @ts-ignore\n            form.addEventListener('submit', formSubmit.delegate(null, cb, cfg));\n            var returnBtn = form.$('button.returnBtn'); // shorthand for back btn\n            if (returnBtn)\n                returnBtn.onclick = goBack;\n        }\n        xhr_1.form = form;\n        /**\n         * 执行表单的 XHR 请求\n         * 通过拦截表单的 submit 事件触发。\n         * @param ev    事件对象\n         * @param cb    回调函数\n         * @param cfg   表单请求的配置参数\n         */\n        function formSubmit(ev, cb, cfg) {\n            ev.preventDefault(); // 禁止 form 默认提交\n            var form = ev.target, method = form.getAttribute('method'); // form.method always GET, so form.getAttribute('method') instead\n            if (method)\n                method = method.toLowerCase();\n            cfg.method = method || cfg.method || 'post';\n            if (!cfg.noFormValid && !aj.form.Validator.onSubmit(form))\n                return;\n            var json = serializeForm(form, cfg);\n            if (cfg && cfg.beforeSubmit && cfg.beforeSubmit(form, json) === false)\n                return;\n            if (cfg.googleReCAPTCHA) {\n                // @ts-ignore\n                grecaptcha.ready(function () {\n                    // @ts-ignore\n                    grecaptcha.execute(cfg.googleReCAPTCHA, { action: 'submit' }).then(function (token) {\n                        // Add your logic to submit to your backend server here.\n                        json.grecaptchaToken = token;\n                        if (cfg.method == 'put')\n                            xhr_1.put(form.action, cb, json);\n                        else\n                            xhr_1.post(form.action, cb, json);\n                    });\n                });\n            }\n            else {\n                if (cfg.method == 'put')\n                    xhr_1.put(form.action, cb, json);\n                else\n                    xhr_1.post(form.action, cb, json);\n            }\n        }\n        /**\n         * 为表单里面的 返回按钮 添加后退的事件处理器\n         *\n         * @param ev\n         */\n        function goBack(ev) {\n            ev.preventDefault();\n            history.back();\n        }\n        /**\n         * 表单序列化，返回 JSON\n         *\n         * @param form  表单元素\n         * @param cfg   是否有忽略的字段\n         * @returns Json 参数，已 encodeURIComponent 编码 value\n         */\n        function serializeForm(form, cfg) {\n            var json = {}, formData = new FormData(form);\n            formData.forEach(function (value, name) {\n                if (cfg && cfg.ignoreField != name) // 忽略的字段\n                    json[name] = encodeURIComponent(value.toString());\n            });\n            return json;\n        }\n    })(xhr = aj.xhr || (aj.xhr = {}));\n})(aj || (aj = {}));\n\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};"],"names":["aj","Element","prototype","$","cssSelector","fn","this","querySelector","apply","arguments","children","querySelectorAll","Array","forEach","call","up","tagName","className","el","parentNode","toUpperCase","indexOf","Function","delegate","_args","_i","length","self","scope","args","aLength","bLength","Length","i","j","_arg","late","Date","format","fmt","k","obj","o","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","HTMLCanvasElement","toBlob","Object","defineProperty","value","callback","type","quality","binStr","atob","toDataURL","split","len","arr","Uint8Array","charCodeAt","Blob","a","b","c","loadScript","url","id","cb","script","document","createElement","src","onload","getElementsByTagName","appendChild","parallel","_finally","index","statusArr","fill","map","isActive","data","resolve","every","item","datas","shift","throttle","delay","mustRunDelay","timer","t_start","_this","t_curr","window","clearTimeout","setTimeout","SELECTED","SELECTED_CSS","VueComponent","$destroy","$emit","e","register","instanceFields","name","cfg","props","methods","dataFields","String","Boolean","Number","Vue","component","$el","body","html","xhr","xhr_1","request","method","params","json2url","XMLHttpRequest","open","onreadystatechange","requestHandler","parseContentType","setRequestHeader","send","json","appendUrl","push","_params","join","ev","readyState","status","responseText","trim","responseXML","JSON","parse","eval","alert","form","defaultCallBack","action","noFormValid","Validator","googleReCAPTCHA","addEventListener","formSubmit","returnBtn","onclick","goBack","preventDefault","target","getAttribute","toLowerCase","onSubmit","serializeForm","beforeSubmit","grecaptcha","ready","execute","then","token","grecaptchaToken","put","post","history","back","FormData","ignoreField","encodeURIComponent","toString","get","dele","onOK","onFail","isOk","msg","show","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","create","__makeTemplateObject","cooked","raw"],"mappings":"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"}